function getroot {
  NAME=`echo "$1" | cut -d'.' -f1`
}

function getext {
  EXTENSION=`echo "$1" | cut -d'.' -f2`
}

function errorcheck {
  if [ $? -ne 0 ]; then
    exit 1
  fi
}

function runpropgcc {
  if [ $verbose -eq 1 ]; then
    echo $ccstr $modelstr $NAME.c
  fi
  $ccstr $modelstr $NAME.c
  errorcheck
}

function runs2pasm {
  if [ $verbose -eq 1 ]; then
    echo $s2pasmstr -p$P2GCC_LIBDIR/prefix.spin2 $s2pmodstr $NAME
  fi
  $s2pasmstr -p$P2GCC_LIBDIR/prefix.spin2 $s2pmodstr $NAME
  errorcheck
}

function runp2asm {
  if [ $verbose -eq 1 ]; then
    echo $asmstr -c -o $NAME.spin2
  fi
  $asmstr -c -o -hub $NAME.spin2
  errorcheck
  linkstr="$linkstr $NAME.o"
}

if [ $# -lt 1 ]
then
echo "p2gcc - a C compiler for the propeller 2 - version 0.007, 2020-01-21"
echo "usage: p2gcc [options] file [file...]"
echo "  options are"
echo "  -c      - Do not run the linker"
echo "  -v      - Enable verbose mode"
echo "  -d      - Enable debug mode"
echo "  -r      - Run after linking"
echo "  -t      - Run terminal emulator"
echo "  -T      - Run terminal emulator in PST mode"
echo "  -k      - Keep intermediate files"
echo "  -s      - Run simulutor"
echo "  -LMM    - Generate LMM assembly"
echo "  -o file - Set output file name"
echo "  -p port - Port used for loading"
echo "  -D name - Define a name for the compiler"
echo "  -L dir  - Specify a library directory"
echo "  -I dir  - Specify an include directory"
echo "  -b baud - Specify a user baud rate"
echo "  -f freq - Specify a clock frequency"
exit
fi

binfile="a.out"
verbose=0
runflag=0
simflag=0
keepflag=0
linkflag=0
ccstr="propeller-elf-gcc -Os -m32bit-doubles -S -D __P2GCC__ "
s2pasmstr="s2pasm "
asmstr="p2asm -v33 "
linkstr="p2link -L $P2GCC_LIBDIR prefix.o p2start.o "
loadstr="loadp2 -PATCH -SINGLE "
simstr="spinsim -b -t "
modelstr="-mcog"
s2pmodstr=""

while [ $# -gt 0 ]
do
  if [ $1 = "-r" ]; then
    if [ $simflag -eq 1 ]; then
      echo "Can't run simulator and hardware at the same time"
      exit 1
    fi
    runflag=1
  else if [ $1 = "-v" ]; then
    verbose=1
    loadstr="$loadstr -v "
    linkstr="$linkstr -v "
  else if [ $1 = "-d" ]; then
    verbose=1
    debugmode=1
    s2pasmstr="$s2pasmstr -d "
    asmstr="$asmstr -d "
    linkstr="$linkstr -d "
    loadstr="$loadstr -v "
  else if [ $1 = "-t" ]; then
    loadstr="$loadstr -t "
  else if [ $1 = "-T" ]; then
    loadstr="$loadstr -T "
  else if [ $1 = "-k" ]; then
    keepflag=1
  else if [ $1 = "-s" ]; then
    if [ $runflag -eq 1 ]; then
      echo "Can't run simulator and hardware at the same time"
      exit 1
    fi
    simflag=1
  else if [ $1 = "-c" ]; then
    linkflag=2
  else if [ $1 = "-LMM" ]; then
    modelstr="-mlmm -mno-fcache"
    s2pmodstr="-lmm"
  else if [ $1 = "-o" ]; then
    shift
    binfile=$1
    linkstr="$linkstr -o $1 "
  else if [ $1 = "-p" ]; then
    shift
    loadstr="$loadstr -p $1 "
  else if [ $1 = "-D" ]; then
    shift
    ccstr="$ccstr -D $1 "
  else if [ $1 = "-L" ]; then
    shift
    linkstr="$linkstr -L $1 "
  else if [ $1 = "-I" ]; then
    shift
    ccstr="$ccstr -I $1 "
  else if [ $1 = "-b" ]; then
    shift
    loadstr="$loadstr -b $1 "
  else if [ $1 = "-f" ]; then
    shift
    loadstr="$loadstr -f $1 "
  else
    getroot $1
    getext $1
    if [ -z $binfile ]; then
      binfile=$NAME
    fi
    if [ $EXTENSION = "c" ]; then
      runpropgcc
      runs2pasm
      runp2asm
      if [ $keepflag -ne 1 ]; then
        rm $NAME.s
        rm $NAME.spin2
        rm $NAME.lst
        rm $NAME.bin
      fi
      if [ $linkflag -eq 0 ]; then
        linkflag=1
      fi
    else if [ $EXTENSION = "s" ]; then
      runs2pasm
      runp2asm
      if [ $keepflag -ne 1 ]; then
        rm $NAME.spin2
        rm $NAME.lst
        rm $NAME.bin
      fi
      if [ $linkflag -eq 0 ]; then
        linkflag=1
      fi
    else if [ $EXTENSION = "spin2" ]; then
      runp2asm
      if [ $keepflag -ne 1 ]; then
        rm $NAME.lst
        rm $NAME.bin
      fi
      if [ $linkflag -eq 0 ]; then
        linkflag=1
      fi
    else if [ $EXTENSION = "o" ]; then
      linkstr="$linkstr $NAME.o"
      if [ $linkflag -eq 0 ]; then
        linkflag=1
      fi
    else if [ $EXTENSION = "a" ]; then
      linkstr="$linkstr $NAME.a"
      if [ $linkflag -eq 0 ]; then
        linkflag=1
      fi
    else
      echo invalid extension in $1
    exit 1
    fi
    fi
    fi
    fi
    fi
    fi
    fi
    fi
    fi
  fi
  fi
  fi
  fi
  fi
  fi
  fi
  fi
  fi
  fi
  fi
  fi
  shift
done
if [ $linkflag -eq 1 ]; then
  if [ $verbose -eq 1 ]; then
    echo $linkstr libc.a
  fi
  $linkstr libc.a
  errorcheck
fi
if [ $simflag -eq 1 ]; then
  if [ $verbose -eq 1 ]; then
    echo $simstr $binfile
  fi
  $simstr $binfile
fi

if [ $runflag -eq 1 ]; then
  if [ $verbose -eq 1 ]; then
    echo $loadstr $binfile
  fi
  $loadstr $binfile
fi
